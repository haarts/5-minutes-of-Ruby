---
layout: post
title: Variables in Ruby
---

<div class='row'>
    <h2>Variables</h2>
</div>
<div class='row'>
  <div class='span12'>
    <pre class='prettyprint'>
      i   = 0 #local
      @i  = 1 #instance
      @@i = 1 #class
      $i  = 1 #global

      class Person
        def full_name
          # define the local variable first_name
          full_name = @first_name + " " + @last_name 
          return full_name
        end
        
        def first_name=(first_name)
          @first_name = first_name #assign the instance variable @first_name
        end
      end
    </pre>
  </div>
  <div class='span4'>
    Variables are scoped. 

    Different variables are scoped differently.

    A local variable is scoped with a function, loop or block.

    An instance variable is shared in the instance of an object.

    A class variable is shared across all instances of an object.

    A global variable is shared with everything in the currently executing code.

    A local variable is the preferred way of using variables.

    An instance variable has some pretty good use cases.

    A class variable is code smell. This is rarely a good idea.

    A global variable is downright evil and should never be used.

  </div>
</div>
